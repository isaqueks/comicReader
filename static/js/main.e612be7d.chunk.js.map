{"version":3,"sources":["reportWebVitals.ts","comicReader/components/comicPage.tsx","comicReader/components/comicDisplay.tsx","comicReader/components/menuBar.tsx","comicReader/components/pagePreview.tsx","comicReader/components/pagePreviewSection.tsx","index.tsx","comicReader/components/comicReader.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ComicPage","props","style","backgroundImage","src","className","ComicDisplay","state","pages","showingIndex","currentIndex","artificialScroll","domElement","shouldIgnoreScrollStop","scrollLeftBeforeScrollStarted","this","length","onSetPage","scrollLeft","diff","Math","abs","nextPage","prevPage","scrollToCorrectIndex","e","clientX","clientY","bounds","target","getBoundingClientRect","elementX","left","top","width","forceSmooth","setScrollLeft","setState","document","querySelector","lastWidth","clientWidth","lastScrollLeft","scrollStopFired","setInterval","onScrollStop","index","step","instant","callback","desired","firstElementChild","onscroll","scroll","behavior","undefined","onClick","clickHandler","getThreePages","React","Component","MenuBar","returnArrowClasses","onReturnClicked","push","join","currentPage","maxPages","toFixed","PagePreview","selectedIndex","url","scrollTop","indexDistance","myScrollTop","useRealImage","window","innerHeight","classes","buildPreviewList","urls","click","previewList","i","PagePreviewSection","realElement","currentScrollTop","panelVisible","height","clientHeight","event","getScrollTop","getElementHeight","selectedElement","scrollIntoView","scrollToSelected","intervalListener","bind","previewIndex","visible","innerWidth","urlArray","panelClasses","togglePanel","onScroll","scrollHandler","previewClicked","ComicReader","previewPages","currentPageIndex","startIndex","onClose","onReadPage","keyHandlers","setPageIndex","handler","code","Error","tabIndex","onKeyDown","handleKeyDown","previews","toString","padStart","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e612be7d.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '../styles/comicPage.css';\r\n\r\nexport default function ComicPage(props) {\r\n\r\n    const style = {\r\n        backgroundImage: `url(\"${props.src}\")`\r\n    }\r\n\r\n    return <div className=\"comicPage\" style={ props.src && style}></div>\r\n}","import React from 'react';\r\nimport '../styles/comicDisplay.css';\r\nimport ComicPage from './comicPage';\r\n\r\ninterface ClickHandler {\r\n    (e: Event);\r\n}\r\n\r\ninterface ComicProps {\r\n\r\n    currentIndex: number;\r\n    pages: string[];\r\n    onSetPage: (i: number) => any;\r\n\r\n}\r\n\r\nexport default class ComicDisplay extends React.Component<ComicProps> {\r\n\r\n \r\n    state = {\r\n        pages: this.props.pages,\r\n        showingIndex: this.props.currentIndex\r\n    }\r\n    \r\n    artificialScroll: boolean = false;\r\n    domElement: HTMLElement;\r\n\r\n    shouldIgnoreScrollStop: boolean = false;\r\n    scrollLeftBeforeScrollStarted: number;\r\n\r\n    private nextPage() {\r\n        if (this.props.currentIndex < this.state.pages.length - 1) {\r\n            this.shouldIgnoreScrollStop = true;\r\n            this.props.onSetPage(this.props.currentIndex+1);\r\n        }\r\n    }\r\n\r\n    private prevPage() {\r\n        if (this.props.currentIndex > 0) {\r\n            this.shouldIgnoreScrollStop = true;\r\n            this.props.onSetPage(this.props.currentIndex-1);\r\n        }\r\n    }\r\n\r\n    private onScrollStop() {\r\n        \r\n        const [ sLeft, sBefore ] = [\r\n            this.domElement.scrollLeft, \r\n            this.scrollLeftBeforeScrollStarted\r\n        ];\r\n\r\n        const diff = (sLeft - sBefore);\r\n\r\n        if (!this.shouldIgnoreScrollStop && diff !== 0) {\r\n\r\n            if (Math.abs(diff) > 20) {\r\n                if (diff > 0) {\r\n                    this.nextPage();\r\n                }\r\n                else {\r\n                    this.prevPage();\r\n                }\r\n            }\r\n            else {\r\n                this.scrollToCorrectIndex(true);\r\n            }\r\n        }\r\n        this.shouldIgnoreScrollStop = false;\r\n    }\r\n\r\n\r\n    private clickHandler(e: any) {\r\n        const { clientX, clientY, target } = e;\r\n\r\n        const bounds = target.getBoundingClientRect();\r\n\r\n        const elementX = bounds.left;\r\n        const elementY = bounds.top;\r\n\r\n        const x = clientX - elementX;\r\n        const y = clientY - elementY;\r\n\r\n        if (x >= bounds.width * 0.5) {\r\n            this.nextPage();\r\n        }\r\n        else {\r\n            this.prevPage();\r\n        }\r\n\r\n    }  \r\n\r\n    private scrollToCorrectIndex(forceSmooth = false) {\r\n        const { currentIndex } = this.props;\r\n        const { showingIndex } = this.state;\r\n        if (showingIndex == currentIndex && currentIndex === 0) {\r\n            return this.setScrollLeft(1, !forceSmooth);\r\n        }\r\n\r\n        const diff = currentIndex - showingIndex;\r\n\r\n        if (Math.abs(diff) === 1) {\r\n            \r\n            this.setScrollLeft(1 + diff, false, () => {\r\n                \r\n                this.setState({\r\n                    showingIndex: currentIndex\r\n                }, () => {\r\n                    this.setScrollLeft(1, !forceSmooth);\r\n                })\r\n            });\r\n        }\r\n        else if (Math.abs(diff) >= 2) {\r\n            this.setState({\r\n                showingIndex: currentIndex\r\n            }, () => {\r\n                this.setScrollLeft(1, !forceSmooth);\r\n            })\r\n        }\r\n        else if (diff === 0) {\r\n            this.setScrollLeft(1, !forceSmooth);\r\n        }\r\n    \r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.domElement) {\r\n            this.domElement = document.querySelector('.comicDisplay');\r\n        }\r\n        this.scrollToCorrectIndex();\r\n\r\n        let lastWidth = this.domElement?.clientWidth;\r\n        let lastScrollLeft = 0;\r\n        let scrollStopFired = false;\r\n        this.scrollLeftBeforeScrollStarted = this.domElement?.scrollLeft;\r\n        setInterval(() => {\r\n            if (!this.domElement) return;\r\n            if (lastWidth && Math.abs(lastWidth - this.domElement.clientWidth) > 0) {\r\n                this.scrollToCorrectIndex();  \r\n            }\r\n            lastWidth = this.domElement.clientWidth;\r\n\r\n            if (this.domElement.scrollLeft != lastScrollLeft) {\r\n                scrollStopFired = false;\r\n                lastScrollLeft = this.domElement.scrollLeft;\r\n            }\r\n            else if (!scrollStopFired) {\r\n                scrollStopFired = true;\r\n                this.onScrollStop();\r\n                this.scrollLeftBeforeScrollStarted = this.domElement?.scrollLeft;\r\n            }\r\n        }, 70);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToCorrectIndex();\r\n    }\r\n\r\n\r\n    private getThreePages(index: number, pages: string[]): JSX.Element[] {\r\n        return [\r\n            <ComicPage src={pages[index-1]} key={index-1} />,\r\n            <ComicPage src={pages[index]} key={index} />,\r\n            <ComicPage src={pages[index+1]} key={index+1} />\r\n        ]\r\n    }\r\n\r\n    private setScrollLeft(step: number, instant: boolean = false, callback?: (i?: number) => any) {\r\n        if (!this.domElement) return;\r\n\r\n        const desired = step * this.domElement.firstElementChild.clientWidth;\r\n\r\n        if (desired === this.domElement.scrollLeft) {\r\n            return callback && callback(desired);\r\n        }\r\n\r\n        this.domElement.onscroll = (e) => {\r\n\r\n            // 10px tolerance to bypass firefox bug\r\n            if (Math.abs(this.domElement.scrollLeft - desired) <= 10) {\r\n                this.artificialScroll = false;\r\n                callback && callback(desired);\r\n            }\r\n        }\r\n        \r\n        // this.scrollLeftBeforeScrollStarted = desired;\r\n        this.artificialScroll = true;\r\n        this.domElement.scroll({\r\n            left: step * this.domElement.firstElementChild.clientWidth,\r\n            behavior: instant ? undefined : 'smooth'\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { pages } = this.props;\r\n\r\n        return <div \r\n            className=\"comicDisplay\" \r\n            onClick={e => this.clickHandler(e)}>\r\n            {this.getThreePages(this.state.showingIndex, pages)}\r\n        </div>;\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport '../styles/menuBar.css';\r\n\r\nexport default function MenuBar(props) {\r\n\r\n    const returnArrowClasses = ['returnArrow'];\r\n    if (!props.onReturnClicked) {\r\n        returnArrowClasses.push('invisible');\r\n    }\r\n\r\n    return (<div className=\"menuBar\">\r\n        <div className={returnArrowClasses.join(' ')} onClick={e => props.onReturnClicked&&props.onReturnClicked(e)}></div>\r\n        <div className=\"menuContent\">\r\n            {props.currentPage+1}/{props.maxPages} \r\n            &nbsp;-&nbsp;{((props.currentPage+1)/props.maxPages*100).toFixed(0)}%\r\n        </div>\r\n    </div>);\r\n}","import React from \"react\";\r\nimport '../styles/pagePreview.css';\r\n\r\nexport default function PagePreview(\r\n    selectedIndex: number, \r\n    index: number, \r\n    url: string, \r\n    scrollTop: number, \r\n    onClick: Function\r\n): JSX.Element {\r\n\r\n    const indexDistance = Math.abs(selectedIndex - index);\r\n    \r\n    const myScrollTop = index * 270;\r\n    const scrollDist = Math.abs(scrollTop - myScrollTop);\r\n\r\n    const useRealImage = scrollDist < window.innerHeight * 2 || indexDistance < 3;\r\n    \r\n\r\n    const classes = ['pagePreview'];\r\n    if (selectedIndex === index) {\r\n        classes.push('selected');\r\n    }\r\n    if (!useRealImage) {\r\n        classes.push('placeholder');\r\n    }\r\n\r\n    return (\r\n        <img \r\n            width=\"100%\" \r\n            key={index} \r\n            data-index={index} \r\n            src={useRealImage ? (url) : undefined} \r\n            className={classes.join(' ')} \r\n            onClick={e => onClick && onClick(index)} \r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport '../styles/pagePreviewSection.css';\r\nimport PagePreview from './pagePreview';\r\n\r\nfunction buildPreviewList(\r\n    selectedIndex: number, \r\n    urls: string[], \r\n    scrollTop: number, \r\n    click): \r\nJSX.Element[] {\r\n        \r\n    const previewList: JSX.Element[] = [];\r\n    let i = 0;\r\n    \r\n    for (let url of urls) {\r\n        previewList.push(\r\n            PagePreview(\r\n                selectedIndex, \r\n                i++, \r\n                url, \r\n                scrollTop, \r\n                click\r\n            )\r\n        );\r\n    }\r\n    \r\n    return previewList;\r\n}\r\n\r\ninterface PreviewSectionProps {\r\n    urlArray: string[];\r\n    selectedIndex: number;\r\n    onSetPage: Function;\r\n}\r\n\r\n\r\nexport default class PagePreviewSection extends React.Component<PreviewSectionProps> {\r\n\r\n    private realElement: HTMLDivElement;\r\n    private selectedIndex = -1;\r\n\r\n    state = {\r\n        currentScrollTop: 0,\r\n        panelVisible: true,\r\n        height: 0\r\n    }\r\n\r\n    private getScrollTop() {\r\n        return this.realElement?.scrollTop || 0;\r\n    }\r\n\r\n    private getElementHeight() {\r\n        return this.realElement?.clientHeight || 0;\r\n    }\r\n\r\n    private scrollHandler(event) {\r\n        const scrollTop = this.getScrollTop();\r\n        const diff = Math.abs(scrollTop - this.state.currentScrollTop);\r\n        if (diff > window.innerHeight) {\r\n            this.setState({\r\n                currentScrollTop: scrollTop,\r\n                height: this.getElementHeight()\r\n            })\r\n        }\r\n    }\r\n\r\n    private scrollToSelected() {\r\n        \r\n        if (this.realElement) {\r\n\r\n            const selectedElement = this.realElement.querySelector(`[data-index=\"${this.props.selectedIndex}\"]`)\r\n            \r\n            selectedElement?.scrollIntoView({\r\n                behavior: 'smooth'\r\n            })\r\n        }\r\n    }\r\n\r\n    private intervalListener() {\r\n        if (this.selectedIndex != this.props.selectedIndex) {\r\n            this.scrollToSelected();            \r\n            this.selectedIndex = this.props.selectedIndex;\r\n        }\r\n\r\n        if (this.getElementHeight() != this.state.height) {\r\n            this.setState({\r\n                height: this.getElementHeight()\r\n            });\r\n            this.scrollToSelected();\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.setInterval(this.intervalListener.bind(this), 75);\r\n        this.realElement = document.querySelector<HTMLDivElement>('.pagePreviewSection');\r\n        const scrollTop = this.getScrollTop();\r\n        if (scrollTop != this.state.currentScrollTop) {\r\n            this.setState({\r\n                currentScrollTop: scrollTop\r\n            })\r\n        }\r\n    }\r\n\r\n    previewClicked(previewIndex: number) {\r\n        if (this.props.onSetPage) {\r\n            this.props.onSetPage(previewIndex);\r\n        }\r\n    }\r\n\r\n    togglePanel(event) {\r\n        const visible = this.state.panelVisible;\r\n        this.setState({\r\n            panelVisible: !visible\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { props } = this;\r\n\r\n        if (window.innerWidth < 600 || !props.urlArray) {\r\n            return (\r\n                <div className=\"pagePreviewContainer hidden\">\r\n                    <div className=\"pagePreviewSection\" />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const panelClasses = ['pagePreviewContainer'];\r\n        if (!this.state.panelVisible) {\r\n            panelClasses.push('panelHidden');\r\n        }\r\n        \r\n        return (\r\n        <div className={panelClasses.join(' ')}>\r\n            <div className=\"pagePreviewHideArrow\" onClick={e => this.togglePanel(e)}>\r\n                <div className=\"pagePreviewHideArrowIcon\" />\r\n            </div>\r\n            <div className=\"pagePreviewSection\" onScroll={e => this.scrollHandler(e)}>\r\n                { buildPreviewList(props.selectedIndex, props.urlArray, this.state.currentScrollTop, this.previewClicked.bind(this)) }\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ComicReader from './comicReader/components/comicReader';\n\nconst pages: Array<string> = []\nconst previews: Array<string> = []\n\nfor (let i = 1; i <= 25; i++) {\n    pages.push(`./fa4f8149-409f-4b92-805b-d99fe92f4f6d/Death Note Vol. 01 (2005) (Digital TPB) (DarkZone-Empire) ${i.toString().padStart(3, '0')}.jpg.480w`);\n    previews.push(`./fa4f8149-409f-4b92-805b-d99fe92f4f6d/Death Note Vol. 01 (2005) (Digital TPB) (DarkZone-Empire) ${i.toString().padStart(3, '0')}.jpg.thumb`);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ComicReader pages={pages} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\r\nimport ComicDisplay from './comicDisplay';\r\nimport '../styles/comicReader.css';\r\nimport MenuBar from './menuBar';\r\nimport PagePreviewSection from './pagePreviewSection';\r\n\r\ninterface ComicReaderProps {\r\n    pages: string[],\r\n    previewPages?: string[],\r\n    startIndex?: number;\r\n    onClose?: Function;\r\n    onReadPage?: Function;\r\n}\r\n\r\nexport default class ComicReader extends React.Component<ComicReaderProps> {\r\n\r\n    state: Readonly<{\r\n        pages: string[],\r\n        previewPages?: string[]\r\n        currentPageIndex: number,\r\n        onClose: Function,\r\n        onReadPage: Function\r\n    }> = {\r\n        pages: this.props.pages,\r\n        previewPages: this.props.previewPages,\r\n        currentPageIndex: this.props.startIndex || 0,\r\n        onClose: this.props.onClose,\r\n        onReadPage: this.props.onReadPage\r\n    }\r\n\r\n    public setPageIndex(index: number) {\r\n\r\n        this.state.onReadPage && this.state.onReadPage(index);\r\n        \r\n        this.setState({\r\n            currentPageIndex: index\r\n        })\r\n    }\r\n\r\n    public nextPage() {\r\n        if (this.state.currentPageIndex < this.state.pages.length - 1) {\r\n            this.setPageIndex(this.state.currentPageIndex+1);\r\n        }\r\n    }\r\n\r\n    public prevPage() {\r\n        if (this.state.currentPageIndex > 0) {\r\n            this.setPageIndex(this.state.currentPageIndex - 1);\r\n        }\r\n    }\r\n\r\n    private keyHandlers = {\r\n        'ArrowLeft': this.prevPage,\r\n        'ArrowUp': this.prevPage,\r\n        'ArrowRight': this.nextPage,\r\n        'ArrowDown': this.nextPage\r\n    }\r\n\r\n    private handleKeyDown(e) {\r\n        const handler = this.keyHandlers[e.code];\r\n        handler && handler.bind(this)();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { pages, currentPageIndex } = this.state;\r\n        const previewPages = this.state.previewPages || pages;\r\n        \r\n        if (previewPages.length != pages.length) {\r\n            throw new Error('pages and previewPages must have the same length!');\r\n        }\r\n\r\n        return (<div tabIndex={0} className=\"comicReader\" onKeyDown={e => this.handleKeyDown(e)}>\r\n            <MenuBar onReturnClicked={this.state.onClose} currentPage={currentPageIndex} maxPages={pages.length} />\r\n            <div className=\"mainContent\">\r\n                <PagePreviewSection selectedIndex={currentPageIndex} urlArray={previewPages} onSetPage={index => this.setPageIndex(index)}/>\r\n                <div className=\"contentCenter\">\r\n                    <ComicDisplay pages={pages} currentIndex={currentPageIndex} onSetPage={i => this.setPageIndex(i)} />\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n}"],"sourceRoot":""}